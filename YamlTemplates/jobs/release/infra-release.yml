parameters:
- name: 'StageName'
  type: string
- name: 'EnvironmentName'
  type: string
- name: 'PoolImage'
  type: string


jobs:
- deployment: ${{parameters.StageName}}
  displayName: 'Deploy to ${{parameters.StageName}}'
  pool:
    vmImage: ${{parameters.PoolImage}}
  environment: '${{parameters.EnvironmentName}}'
  strategy:
    runOnce:
      deploy:
        steps:
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'single'
            downloadPath: '$(System.ArtifactsDirectory)'
            artifactName: 'drop'

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Provision Analysis Services'
          condition: eq(variables['IsAnalysisServicesRequired'],true)
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AzureServiceConnectionName)'
            subscriptionId: '$(SubscriptionId)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(ResourceGroupName)'
            location: '$(ResourceGroupLocation)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.ArtifactsDirectory)/drop/ARM/AzureAnalysisServices/AzureAnalysisServices.json'
            csmParametersFile: '$(System.ArtifactsDirectory)/drop/ARM/AzureAnalysisServices/AzureAnalysisServices.parameters.json'
            overrideParameters: '-ServerName $(AnalysisServicesName) -Location "$(AnalysisServicesLocation)" -Administrators "$(AnalysisServicesAdministrators)" -Tags {$(AnalysisServicesTags)} -SkuName "$(AnalysisServicesSkuName)" -SkuTier "$(AnalysisServicesSkuTier)"'
            deploymentMode: 'Incremental'

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Provision Logic App Teams'
          condition: eq(variables['IsLogicAppRequired'],true)
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AzureServiceConnectionName)'
            subscriptionId: '$(SubscriptionId)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(ResourceGroupName)'
            location: '$(ResourceGroupLocation)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.ArtifactsDirectory)/drop/ARM/LogicApp/LogicApp.json'
            csmParametersFile: '$(System.ArtifactsDirectory)/drop/ARM/LogicApp/LogicApp.parameters.json'
            overrideParameters: '-workflowName $(LogicAppWorkflowName) -workflowLocation "$(LogicAppLocation)" -tags {$(LogicAppTags)}'
            deploymentMode: 'Incremental'

        - task: AzurePowerShell@4
          displayName: 'Provision workflow definition in Logic App'
          condition: eq(variables['IsLogicAppRequired'],true)
          inputs:
            azureSubscription: '$(AzureServiceConnectionName)'
            ScriptPath: '$(System.ArtifactsDirectory)/drop/ARM/LogicApp/DeployLogicAppDefinition.ps1'
            ScriptArguments: '$(ResourceGroupName) $(LogicAppWorkflowName) "$(System.ArtifactsDirectory)/drop" $(NotificationWebhookURI)'
            azurePowerShellVersion: LatestVersion

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Provision Azure SQL DB'
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AzureServiceConnectionName)'
            subscriptionId: '$(SubscriptionId)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(ResourceGroupName)'
            location: '$(ResourceGroupLocation)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.ArtifactsDirectory)/drop/ARM/AzureSQLDB/AzureSqlDb.json'
            csmParametersFile: '$(System.ArtifactsDirectory)/drop/ARM/AzureSQLDB/AzureSqlDb.parameters.json'
            overrideParameters: '-metadataSqlServerName $(MetadataSqlServerName) -location $(MetadataSqlServerLocation) -metadataAdministratorLogin $(MetadataAdministratorLogin) -metadataAdministratorLoginPassword $(MetadataAdministratorLoginPassword) -metadataDatabaseName $(MetadataDatabaseName) -metadataDbSkuName $(MetadataDbSkuName) -metadataDbSkuTier $(MetadataDbSkuTier) -metadataDbCollation $(MetadataDbCollation)'
            deploymentMode: 'Incremental'
            
        - task: AzureResourceGroupDeployment@2
          displayName: Provision Synapse Analytics Workspace
          inputs:
            azureSubscription:  '$(AzureServiceConnectionName)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: $(ResourceGroupName)
            location: $(ResourceGroupLocation)
            templateLocation: 'Linked artifact'
            csmFile: '$(System.ArtifactsDirectory)/drop/ARM/Synapse/AzureSynapseAnalytics.json'
            csmParametersFile: '$(System.ArtifactsDirectory)/drop/ARM/Synapse/AzureSynapseAnalytics.parameters.json'
            overrideParameters: '-name $(SynapseWorkspaceName) -location $(SynapseLocation) -defaultDataLakeStorageAccountName $(SyanpseDefaultADLSName) -defaultDataLakeStorageFilesystemName $(SyanpseDefaultADLSFileSystemName) -sqlAdministratorLogin $(SynapseSqlAdministratorLogin) -sqlAdministratorLoginPassword $(SynapseSqlAdministratorLoginPassword) -setWorkspaceIdentityRbacOnStorageAccount $(SynapseWorkspaceIdentityRbacOnStorageAccount) -allowAllConnections $(SynapseAllowAllConnections) -grantWorkspaceIdentityControlForSql $(SynapseGrantWorkspaceIdentityControlForSql) -managedVirtualNetwork $(SynapseManagedVirtualNetwork) -tagValues {$(SynapseWorkspaceTags)} -storageSubscriptionID $(SubscriptionId) -storageResourceGroupName $(ResourceGroupName) -storageLocation $(SynapseStorageLocation) -isNewStorageAccount $(SynapseIsNewStorageAccount) -isNewFileSystemOnly $(SynapseIsNewFileSystemOnly) -storageAccessTier $(SynapseStorageAccessTier) -storageAccountType $(SynapseStorageAccountType) -storageSupportsHttpsTrafficOnly $(SynapseStorageSupportsHttpsTrafficOnly) -storageKind $(SynapseStorageKind) -storageIsHnsEnabled $(SynapseStorageIsHnsEnabled) -setSbdcRbacOnStorageAccount $(SynapseSetUserRbacOnStorageAccount) -userObjectId $(SynapseStorageAccountAccessUserObjectID) -sqlActiveDirectoryAdminName $(SynapseSqlActiveDirectoryAdminName) -sqlActiveDirectoryAdminObjectId $(SynapseSqlActiveDirectoryAdminObjectId) -ContributorADGroupObjectID "$(ContributorADGroupObjectID)" -managedResourceGroupName $(SynapseManagedResourceGroupName)'
            deploymentMode: 'Incremental'
        
        - task: AzureResourceGroupDeployment@2
          displayName: Provision Synapse SQL Pool
          inputs:
            azureSubscription:  '$(AzureServiceConnectionName)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: $(ResourceGroupName)
            location: $(ResourceGroupLocation)
            templateLocation: 'Linked artifact'
            csmFile: '$(System.ArtifactsDirectory)/drop/ARM/Synapse/AzureSynapseSQLPools.json'
            csmParametersFile: '$(System.ArtifactsDirectory)/drop/ARM/Synapse/AzureSynapseSQLPools.parameters.json'
            overrideParameters: '-sqlPoolName $(SqlPoolName) -workspaceName $(SynapseWorkspaceName) -location $(SqlPoolLocation) -tags {$(SqlPoolTags)} -sku $(SqlPoolSku) -collation $(SqlPoolCollation)'
            deploymentMode: 'Incremental'
        
        - task: AzureResourceGroupDeployment@2
          displayName: Provision Synapse Spark Pool
          inputs:
            azureSubscription:  '$(AzureServiceConnectionName)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: $(ResourceGroupName)
            location: $(ResourceGroupLocation)
            templateLocation: 'Linked artifact'
            csmFile: '$(System.ArtifactsDirectory)/drop/ARM/Synapse/AzureSynapseSparkPools.json'
            csmParametersFile: '$(System.ArtifactsDirectory)/drop/ARM/Synapse/AzureSynapseSparkPools.parameters.json'
            overrideParameters: '-nodeCount $(SparkPoolNodeCount) -nodeSizeFamily $(SparkPoolNodeSizeFamily) -nodeSize $(SparkPoolNodeSize) -autoScaleMinNodeCount $(SparkPoolAutoScaleMinNodeCount) -autoScaleMaxNodeCount $(SparkPoolAutoScaleMaxNodeCount) -autoPauseDelayInMinutes $(SparkPoolAutoPauseDelayInMinutes) -sparkVersion $(SparkPoolSparkVersion) -workspaceName $(SynapseWorkspaceName) -location $(SparkPoolLocation) -name $(SparkPoolName) -autoScaleEnabled $(SparkPoolAutoScaleEnabled) -autoPauseEnabled $(SparkPoolAutoPauseEnabled) -tags {$(SparkPoolTags)}'
            deploymentMode: 'Incremental'

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Provision Key Vault'
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AzureServiceConnectionName)'
            subscriptionId: '$(SubscriptionId)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(ResourceGroupName)'
            location: '$(ResourceGroupLocation)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.ArtifactsDirectory)/drop/ARM/AzureKeyVault/AzureKeyVault.json'
            csmParametersFile: '$(System.ArtifactsDirectory)/drop/ARM/AzureKeyVault/AzureKeyVault.parameters.json'
            overrideParameters: '-keyVaultName $(KeyVaultName) -Location "$(KeyVaultLocation)" -Tags {$(KeyVaultTags)} -SPObjectID "$(KeyVaultAccessObjectId)" -ContributorADGroupObjectID "$(ContributorADGroupObjectID)" -workspaceName $(SynapseWorkspaceName)'
            deploymentMode: 'Incremental'

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Provision Automation Account'
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AzureServiceConnectionName)'
            subscriptionId: '$(SubscriptionId)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(ResourceGroupName)'
            location: '$(ResourceGroupLocation)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.ArtifactsDirectory)/drop/ARM/AzureAutomationAccount/AzureAutomation.json'
            csmParametersFile: '$(System.ArtifactsDirectory)/drop/ARM/AzureAutomationAccount/AzureAutomation.parameters.json'
            overrideParameters: '-AutomationAccountName $(AutomationAccountName) -Location "$(AutomationAccountLocation)" -Tags {$(AutomationAccountTags)} -Sku "$(AutomationAccountSku)"'
            deploymentMode: 'Incremental'

        - task: AzurePowerShell@4
          displayName: 'Provision runbooks in Automation Account'
          inputs:
            azureSubscription: '$(AzureServiceConnectionName)'
            ScriptPath: '$(System.ArtifactsDirectory)/drop/ARM/AzureAutomationAccount/DeployRunBooks.ps1'
            ScriptArguments: '$(AutomationAccountName) "$(System.ArtifactsDirectory)/drop" $(ResourceGroupName)'
            azurePowerShellVersion: LatestVersion
            
        - task: Bash@3
          displayName: 'Assign Synapse Admin Roles'        
          inputs:
            targetType: 'filePath'
            filePath: '$(System.ArtifactsDirectory)/drop/ARM/addSynapseRole.sh'
          env:
            SYSTEM_ACCESSTOKEN: $(system.accesstoken)
            TENANT_ID: $(AzureActiveDirectoryTenantID)
            CLIENT_ID: $(DevOpsApplicationClientID)
            CLIENT_SECRET: $(DevOpsApplicationClientSecret)
            WORKSPACE_NAME: $(SynapseWorkspaceName)
            WS_ADMIN: $(SynapseWorkspaceAdminObjectID)
            SQL_ADMIN: $(SqlPoolAdminObjectID)
            SPARK_ADMIN: $(SparkPoolAdminObjectID)

        - task: AzurePowerShell@4
          displayName: 'Provision secrets in KeyVault'
          inputs:
            azureSubscription: '$(AzureServiceConnectionName)'
            ScriptPath: '$(System.ArtifactsDirectory)/drop/ARM/AddKeyVaultSecrets.ps1'
            ScriptArguments: '$(KeyVaultName) $(MetadataSqlServerName) $(MetadataDatabaseName) $(MetadataAdministratorLogin) $(MetadataAdministratorLoginPassword) $(SynapseWorkspaceName) $(SqlPoolName) $(SynapseSqlAdministratorLogin) $(SynapseSqlAdministratorLoginPassword) $(MasterKeyPassword) "$(LogicAppTriggerCallBackURI)" $(SubscriptionId) $(ResourceGroupName)'
            azurePowerShellVersion: LatestVersion

        - task: SqlAzureDacpacDeployment@1
          displayName: 'Deploy Azure Meta Data Schema'        
          inputs:
            azureSubscription:  '$(AzureServiceConnectionName)'
            serverName: '$(MetadataSqlServerName).database.windows.net'
            databaseName: '$(MetadataDatabaseName)'
            sqlUserName: '$(MetadataAdministratorLogin)'
            sqlPassword: '$(MetadataAdministratorLoginPassword)'         
            dacpacFile: '$(System.ArtifactsDirectory)/drop/SQLMetaData/Debug/Framework.dacpac'
            deployType: 'DacpacTask'
            deploymentAction: 'Publish'
   
        - task: AzureResourceGroupDeployment@2
          displayName: Provision Machine Learning Workspace
          condition: eq(variables['IsAzureMachineLearningRequired'],true)
          inputs:
            azureSubscription:  '$(AzureServiceConnectionName)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: $(ResourceGroupName)
            location: $(ResourceGroupLocation)
            templateLocation: 'Linked artifact'
            csmFile: '$(System.ArtifactsDirectory)/drop/ARM/MachineLearning/AzureMachineLearning.json'
            csmParametersFile: '$(System.ArtifactsDirectory)/drop/ARM/MachineLearning/AzureMachineLearning.parameters.json'
            overrideParameters: '-location "$(MachineLearningLocation)" -workspaceName $(MachineLearningWorkspaceName) -resourceGroupName $(ResourceGroupName) -tagValues {$(MachineLearningTags)} -storageAccountName $(MachineLearningStorageAccountName) -storageAccountType $(MachineLearningStorageAccountType) -containerRegistryName $(MachineLearningContainerRegistryName) -containerRegistrySku $(MachineLearningContainerRegistrySku) -applicationInsightsName $(MachineLearningApplicationInsightsName) -keyVaultName $(KeyVaultName) -keyVaultResourceGroupName $(ResourceGroupName) -keyVaultLocation "$(KeyVaultLocation)"'
            deploymentMode: 'Incremental'